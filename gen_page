#!/usr/bin/env python

import os
path = os.path.split(os.path.realpath(__file__))[0]

os.chdir(path)

version = open("node_modules/salvus_version.js").read().split('=')[1].strip()

##################################
# generate static/index.html

out = open("static/index.html","w")
## removed since this has to be after doctype...
## out.write("<!-- THIS FILE IS AUTOGENERATED BY gen_page !!! Edit the files in static/page instead. -->\n\n")

for X in open("page/index.html").readlines():
    if ".html" in X:
       out.write(open(os.path.join("page/", X.strip())).read().replace("__SALVUS_VERSION__",version))
    else:
       out.write(X)

####################################################
# generate static/index.js and static/index.min.js

out = open("static/index.js","w")
out.write("/* THIS FILE IS AUTOGENERATED BY gen_page !!! Edit the files in static/page instead. */\n\n")
out.write("""
$(function() {

/* A very simple implementation of require for the page modules. */
var _require = require;
_require.page_modules = {};
require = function(name) {
    var m = _require.page_modules[name];  /* check if it is a page module */
    if (m != null) { return m; }          /* yes */
    return _require(name);                /* no: use the browserify require -- which wraps npm modules */
};
var key;
for (key in _require) { require[key] = _require[key]; }  /* copy over the other functionality of require module */
""")
for X in open("page/index.js").readlines():
    if X.strip().startswith('#'):
        # ignore comments
        pass
    elif ".coffee" in X:
        out.write("exports={};(function(){\n")
        out.write(open(os.path.join("page/temp/", X.strip().replace('.coffee','.js'))).read())
        out.write("})();_require.page_modules['%s']=exports;"%X.strip().split('.')[0])
    else:
        out.write(X)

out.write("\n});")
out.close()

####################################################
# generate static/index.css

out = open("static/index.css","w")
out.write("/* THIS FILE IS AUTOGENERATED BY gen_page !!! Edit the files in static/page instead. */\n\n")
for X in open("page/index.css").readlines():
    if ".css" in X:
        out.write(open(os.path.join("page/", X.strip())).read())
    else:
        out.write(X)

